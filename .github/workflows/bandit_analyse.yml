name: Analyse de sécurité Python avec Bandit

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  bandit_scan:
    name: Analyse du code avec Bandit
    runs-on: ubuntu-latest

    steps:
      - name: 🧾 Étape 1 - Récupération du code
        uses: actions/checkout@v4

      - name: 🐍 Étape 2 - Installation de Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: 📦 Étape 3 - Installation de Bandit
        run: |
          python -m pip install --upgrade pip
          pip install bandit

      - name: 🔍 Étape 4 - Analyse du code source avec Bandit
        run: |
          bandit -r . -f json -o rapport_bandit.json
          bandit -r . -f txt -o rapport_bandit.txt
          cat rapport_bandit.txt
          cat rapport_bandit.json

      - name: 🚨 Étape 5 - Vérification des vulnérabilités critiques
        run: |
          high_count=$(bandit -r . -f json | jq '.results[] | select(.issue_severity=="HIGH")' | wc -l)
          echo "Nombre de vulnérabilités critiques détectées : $high_count"
          if [ "$high_count" -gt 0 ]; then
            echo "❌ Échec du pipeline : failles de sévérité HIGH détectées."
            exit 1
          else
            echo "✅ Aucune faille critique détectée."
          fi
